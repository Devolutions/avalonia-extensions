<!-- Based off https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/RadioButton.xaml -->

<ResourceDictionary xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    x:ClassModifier="internal">

  <!-- 
    Un-comment to allow auto-completion;
    DO NOT INCLUDE WHEN PUBLISHING!
  -->
  <!-- <ResourceDictionary.MergedDictionaries> -->
  <!--   <ResourceInclude Source="/Accents/ThemeResources.axaml" /> -->
  <!-- </ResourceDictionary.MergedDictionaries> -->

  <Design.PreviewWith>
    <Border Padding="20" Background="Silver">
      <StackPanel>
        <RadioButton GroupName="1" Content="When" />
        <RadioButton GroupName="1" Content="Always" IsChecked="True" />
        <RadioButton GroupName="2" IsEnabled="False" Content="Option 1" Margin="0 10 0 0" />
        <RadioButton GroupName="2" Content="Option 2" IsChecked="True" IsEnabled="False" />
      </StackPanel>
    </Border>
  </Design.PreviewWith>


  <ControlTheme x:Key="{x:Type RadioButton}" TargetType="RadioButton">
    <Setter Property="Foreground" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="Background" Value="{DynamicResource CheckBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="FontSize" Value="{DynamicResource ControlFontSize}" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="Template">
      <ControlTemplate TargetType="RadioButton">
        <Panel Name="ReservedSpaceForFocus"
               Margin="{StaticResource InputControlsSpaceForFocusBorder}">
          <Grid ColumnDefinitions="Auto,5,*">
            <Border
              Name="FocusBorderElement"
              VerticalAlignment="Center"
              Margin="{StaticResource FocusBorderMargin}"
              BorderThickness="{StaticResource FocusBorderThickness}"
              CornerRadius="10">
              <Border
                Name="ControlBorder"
                Width="14"
                Height="14"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="7"
                BoxShadow="{DynamicResource ControlBackgroundRecessedShadow}">
                <Ellipse
                  Name="CheckGlyph"
                  IsVisible="False"
                  Width="6"
                  Height="6"
                  Fill="{WindowActiveBindingToggler 
                        {DynamicResourceToggler {Binding $parent[RadioButton].IsEnabled}, ControlForegroundAccentHighBrush, ForegroundLowBrush}, 
                        {DynamicResourceToggler {Binding $parent[RadioButton].IsEnabled}, ControlForegroundAccentInactiveHighBrush, ForegroundLowBrush}}"
                  UseLayoutRounding="False" />
              </Border>
            </Border>

            <ContentPresenter
              Name="PART_ContentPresenter"
              Grid.Column="2"
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Content="{TemplateBinding Content}"
              ContentTemplate="{TemplateBinding ContentTemplate}"
              IsVisible="{TemplateBinding Content, Converter={x:Static ObjectConverters.IsNotNull}}"
              Foreground="{TemplateBinding Foreground}"
              RecognizesAccessKey="True"
              TextWrapping="Wrap"
              TextElement.Foreground="{TemplateBinding Foreground}" />
          </Grid>
        </Panel>
      </ControlTemplate>
    </Setter>

    <!-- Tabbing focus -->
    <Style Selector="^:focus-visible">
      <Style Selector="^ /template/ Border#FocusBorderElement">
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorderBrush}" />
      </Style>
    </Style>

    <!--  Checked State  -->
    <Style Selector="^:checked">
      <Setter Property="Background" Value="{WindowActiveResourceToggler ControlBackgroundAccentRaisedBrush, ControlBackgroundHighBrush}" />
      <Style Selector="^/template/ Border#ControlBorder">
        <Setter Property="BorderBrush" Value="{WindowActiveResourceToggler ControlBorderAccentBrush, ControlBorderBrush}" />
        <Setter Property="BoxShadow" Value="0 0 Transparent" /> <!-- TODO: How do you set it to None? -->
      </Style>
      <Style Selector="^/template/ Ellipse#CheckGlyph">
        <Setter Property="IsVisible" Value="True" />
      </Style>
    </Style>

    <!--  Pressed State  -->
    <Style Selector="^:pressed">
      <Style Selector="^ /template/ Border#ControlBorder">
        <Setter Property="Background" Value="{DynamicResource CheckBoxPressedBackgroundBrush}" />
      </Style>
      <Style Selector="^:checked /template/ Border#ControlBorder">
        <Setter Property="Background" Value="{DynamicResource CheckBoxPressedCheckedBackgroundBrush}" />
      </Style>
    </Style>

    <!--  Disabled State  -->
    <Style Selector="^:disabled">
      <Setter Property="Background" Value="{DynamicResource ControlBackgroundDisabledHighBrush}" />
      <Style Selector="^/template/ Border#ControlBorder">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderDisabledBrush}" />
      </Style>
      <Style Selector="^/template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundLowBrush}" />
      </Style>
      <Style Selector="^:checked">
        <Style Selector="^/template/ Border#ControlBorder">
          <Setter Property="BorderThickness" Value="{DynamicResource ControlBorderThickness}" />
          <Setter Property="BoxShadow" Value="{DynamicResource ControlBackgroundRecessedShadow}" />
        </Style>
        <Style Selector="^/template/ Ellipse#CheckGlyph">
          <Setter Property="IsVisible" Value="True" />
          <!-- Fill is handled within the template since the WindowActive toggler will always override styles -->
        </Style>
      </Style>
    </Style>
  </ControlTheme>
</ResourceDictionary>