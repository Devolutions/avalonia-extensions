<Styles x:Class="Devolutions.AvaloniaTheme.MacOS.DevolutionsMacOsThemeGlobalStyles"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--
    All styles defined here will "bleed-out" of our isolated ControlTheme!
    These should be limited as much as possible.
    
    We only have this here to support some scenarios where it might be conveninent to
    provide some default styling to children of some elements.
    For example, when a MenuItem.Icon contain a Svg and that menu item is disabled, we want to
    colorize that Svg in grey. 
    
    These styles are opt-out; consumers can use `<DevolutionsMacOsTheme GlobalStyles="False" />`
    to opt-out of these global styles.
    
    They are also provided as a separate tag to cover scenarios where consumers would like to scope
    them to some control instead of including them globally;
    They are thus available through the (very verbose) `<DevolutionsMacOsThemeGlobalStyles />` tag.

    This is to ensure consumers are granted enough control to prevent styles "bleeding-out" in cases
    where that might be undesirable.
    
    - sbergerondrouin 2025-06-09
  -->

  <Style Selector="Menu.MacOS_Theme_MenuOpensAbove > MenuItem > Border > Panel > Popup">
    <Setter Property="Placement" Value="TopEdgeAlignedLeft" />
    <Setter Property="VerticalOffset" Value="{DynamicResource MenuPopupAboveVerticalOffset}" />
    <Style Selector="^ Border">
      <Setter Property="Margin" Value="{DynamicResource MenuPopupAboveMargin}" />
    </Style>
  </Style>

  <Style Selector="MenuItem Svg">
    <Setter Property="Css">
      <Setter.Value>
        <Binding Source="{StaticResource DefaultIconFillBrush}" Converter="{x:Static DevoConverters.ColorToCssFillConverter}" ConverterParameter='.st0' />
      </Setter.Value>
    </Setter>
  </Style>

  <Style Selector="MenuItem Svg:disabled">
    <Setter Property="Css">
      <Setter.Value>
        <Binding Source="{StaticResource SvgIconDisabledColorBrush}" Converter="{x:Static DevoConverters.ColorToCssFillConverter}" />
      </Setter.Value>
    </Setter>
  </Style>

  <Style
    Selector="Grid.form > Label /template/ TextBlock#Colon,
                 Label.form /template/ TextBlock#Colon,
                 .compact-form > Label /template/ TextBlock#Colon">
    <Setter Property="IsVisible" Value="True" />
  </Style>


  <!-- Custom Classes used as ConverterParameters in Template styles - declared here to make them available to the IDE's parser to avoid false error highlighting -->
  <Style Selector=".MacOS_Theme_MenuLabelBelowIcon" />
  <Style Selector=".MacOS_Theme_MenuItemIconOnly" />

</Styles>