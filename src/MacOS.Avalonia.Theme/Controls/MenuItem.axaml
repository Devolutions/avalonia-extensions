<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:conv="using:Avalonia.Controls.Converters">

  <Design.PreviewWith>
    <Border Padding="20" Width="320">
      <StackPanel Spacing="20" HorizontalAlignment="Left">
        <MenuItem Header="_Standard" />
        <MenuItem IsSelected="True" Header="Selected" />
        <MenuItem Header="With Icon">
          <MenuItem.Icon>
            <TextBlock>ðŸ˜Š</TextBlock>
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="With CheckBox">
          <MenuItem.Icon>
            <CheckBox IsChecked="True" />
          </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="Input Gesture" InputGesture="Ctrl+G" />
        <MenuItem Header="Disabled" IsEnabled="False" />
        <MenuItem Header="-" />
        <MenuItem Header="Parent" IsSubMenuOpen="True">
          <MenuItem Header="Child 1" />
          <MenuItem Header="Child 2" />
          <MenuItem Header="Child 3" />
          <Separator />
          <MenuItem Header="Child 4" />
          <MenuItem Header="Child 5" />
          <MenuItem Header="Child 6" />
          <MenuItem Header="Child 7" />
          <MenuItem Header="Child 8" />
          <MenuItem Header="Child 9" />
          <MenuItem Header="Child 10" />
          <MenuItem Header="Child 11" />
          <MenuItem Header="Child 12" />
          <MenuItem Header="Child 13" />
          <MenuItem Header="Child 14" />
          <MenuItem Header="Child 15" />
          <MenuItem Header="Child 16" />
          <MenuItem Header="Child 17" />
          <MenuItem Header="Child 18" />
          <MenuItem Header="Child 19" />
        </MenuItem>
        <MenuItem Header="Disabled Parent" IsEnabled="False">
          <MenuItem Header="Child" />
        </MenuItem>
      </StackPanel>
    </Border>
  </Design.PreviewWith>

  <ResourceDictionary.MergedDictionaries>
    <ResourceInclude Source="/Accents/ThemeResources.axaml" />
  </ResourceDictionary.MergedDictionaries>

  <conv:PlatformKeyGestureConverter x:Key="KeyGestureConverter" />

  <ControlTheme x:Key="{x:Type MenuItem}" TargetType="MenuItem">
    <Setter Property="FontSize" Value="{StaticResource ControlFontSize}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Foreground" Value="{DynamicResource ForegroundHighBrush}" />
    <!--  Narrow padding should be used for mouse input, when non-narrow one should be used for touch input in future.  -->
    <Setter Property="Padding" Value="{DynamicResource MenuItemPadding}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Panel>
          <Border Name="PART_LayoutRoot"
                  Padding="{TemplateBinding Padding}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="{StaticResource SelectionCornerRadius}">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"
                                  SharedSizeGroup="ToggleIcon" />
                <ColumnDefinition Width="Auto"
                                  SharedSizeGroup="MenuItemIcon" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto"
                                  SharedSizeGroup="MenuItemChevronAndIGT" />
              </Grid.ColumnDefinitions>

              <ContentControl Grid.Column="0"
                              x:Name="PART_ToggleIconPresenter"
                              IsVisible="False"
                              Theme="{StaticResource FluentMenuItemIconTheme}"
                              Margin="{DynamicResource MenuIconPresenterMargin}" />

              <ContentControl Name="PART_IconPresenter"
                              Grid.Column="1"
                              IsVisible="False"
                              Theme="{StaticResource FluentMenuItemIconTheme}"
                              Content="{TemplateBinding Icon}"
                              Margin="{DynamicResource MenuIconPresenterMargin}" />

              <ContentPresenter Name="PART_HeaderPresenter"
                                Grid.Column="2"
                                Foreground="{TemplateBinding Foreground}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Stretch"
                                RecognizesAccessKey="True" />
              <TextBlock Name="PART_InputGestureText"
                         Grid.Column="3"
                         Margin="{DynamicResource MenuInputGestureTextMargin}"
                         Text="{TemplateBinding InputGesture, Converter={StaticResource KeyGestureConverter}}"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Center"
                         Foreground="{DynamicResource ForegroundMidLowBrush}"
                         IsVisible="{TemplateBinding InputGesture, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
              <!-- Not sure why `TemplateBinding Foreground` doesn't work with the PART_ChevronPath Fill (won't pick up any changes) -->
              <Path Name="PART_ChevronPath"
                    Grid.Column="3"
                    Stretch="Uniform"
                    Width="{StaticResource TreeViewItemChevronSize}"
                    Height="{StaticResource TreeViewItemChevronSize}"
                    Data="{StaticResource ChevronPath}"
                    Fill="{Binding $parent[MenuItem].Foreground}"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right">
                <Path.RenderTransform>
                  <TransformGroup>
                    <RotateTransform Angle="90" />
                  </TransformGroup>
                </Path.RenderTransform>
              </Path>
            </Grid>
          </Border>
          <Popup Name="PART_Popup"
                 WindowManagerAddShadowHint="False"
                 Placement="RightEdgeAlignedTop"
                 HorizontalOffset="{DynamicResource MenuFlyoutSubItemPopupHorizontalOffset}"
                 VerticalOffset="{DynamicResource MenuFlyoutSubItemPopupVerticalOffset}"
                 IsLightDismissEnabled="False"
                 IsOpen="{TemplateBinding IsSubMenuOpen, Mode=TwoWay}">
            <Border Margin="{StaticResource PopupMargin} "
                    Background="{DynamicResource PopupBackgroundBrush}"
                    Padding="{DynamicResource MenuFlyoutPadding}"
                    MaxWidth="{DynamicResource FlyoutThemeMaxWidth}"
                    MinHeight="{DynamicResource MenuFlyoutThemeMinHeight}"
                    HorizontalAlignment="Stretch"
                    BoxShadow="{DynamicResource PopupShadow}"
                    CornerRadius="{DynamicResource LayoutCornerRadius}">
              <ScrollViewer Theme="{StaticResource FluentMenuScrollViewer}">
                <ItemsPresenter Name="PART_ItemsPresenter"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                Margin="{DynamicResource MenuFlyoutScrollerMargin}"
                                Grid.IsSharedSizeScope="True" />
              </ScrollViewer>
            </Border>
          </Popup>
        </Panel>
      </ControlTemplate>
    </Setter>

    <Style Selector="^:open /template/ Path#PART_ChevronPath">
      <Setter Property="Fill" Value="{DynamicResource ForegroundHighBrush}" />
    </Style>

    <Style Selector="^:icon /template/ ContentControl#PART_IconPresenter">
      <Setter Property="IsVisible" Value="True" />
    </Style>
    <Style Selector="^:selected">
      <Style Selector="^ /template/ Border#PART_LayoutRoot">
        <Setter Property="Background" Value="{DynamicResource LayoutBackgroundMidBrush}" />
      </Style>
    </Style>
    <Style Selector="^:pointerover">
      <Style Selector="^ /template/ Border#PART_LayoutRoot">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundAccentMidBrush}" />
      </Style>
      <Style Selector="^">
        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundAccentHighBrush}" />
      </Style>
      <Style Selector="^ /template/ TextBlock#PART_InputGestureText">
        <Setter Property="Foreground" Value="{DynamicResource ControlForegroundAccentHighBrush}" />
      </Style>
    </Style>

    <Style Selector="^:disabled">
      <Style Selector="^">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundLowBrush}" />
      </Style>
      <Style Selector="^ /template/ TextBlock#PART_InputGestureText">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundLowBrush}" />
      </Style>
    </Style>

    <Style Selector="^:empty /template/ Path#PART_ChevronPath">
      <Setter Property="IsVisible" Value="False" />
    </Style>

    <Style Selector="^:separator">
      <Setter Property="Template">
        <ControlTemplate>
          <Separator />
        </ControlTemplate>
      </Setter>
    </Style>

    <Style Selector="^ /template/ Image#PART_ToggleIconImage">
      <Setter Property="IsVisible" Value="True" />
    </Style>

    <Style Selector="^:checked:toggle /template/ ContentControl#PART_ToggleIconPresenter">
      <Setter Property="IsVisible" Value="True" />
      <Setter Property="Content">
        <Template>
          <Path Name="ToggleCheckMark"
                Fill="{Binding $parent[MenuItem].Foreground}"
                Width="10"
                Height="10"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Stretch="Fill"
                Data="{DynamicResource CheckMarkPath}" />
        </Template>
      </Setter>
    </Style>
    <Style Selector="^:checked:radio /template/ ContentControl#PART_ToggleIconPresenter">
      <Setter Property="IsVisible" Value="True" />
      <Setter Property="Content">
        <Template>
          <Ellipse Fill="{Binding $parent[MenuItem].Foreground}"
                   Margin="4" Width="8" Height="8" />
        </Template>
      </Setter>
    </Style>
  </ControlTheme>
  <ControlTheme x:Key="HorizontalMenuItem" TargetType="MenuItem" BasedOn="{StaticResource FluentTopLevelMenuItem}">
    <Setter Property="Padding" Value="{DynamicResource HorizontalMenuFlyoutItemThemePaddingNarrow}" />
    <Setter Property="Margin" Value="{DynamicResource HorizontalMenuFlyoutItemMargin}" />
  </ControlTheme>

  <ControlTheme x:Key="FluentMenuItemIconTheme"
                TargetType="ContentControl">
    <Setter Property="Width" Value="10" />
    <Setter Property="Height" Value="10" />
    <Setter Property="Template">
      <ControlTemplate>
        <Viewbox
          StretchDirection="DownOnly"
          HorizontalAlignment="Center"
          VerticalAlignment="Center">
          <ContentPresenter Name="PART_ContentPresenter" Content="{TemplateBinding Content}" />
        </Viewbox>
      </ControlTemplate>
    </Setter>
  </ControlTheme>
</ResourceDictionary>