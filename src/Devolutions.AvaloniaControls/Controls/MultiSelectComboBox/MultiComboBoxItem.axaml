<ResourceDictionary
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Design.PreviewWith>
    <StackPanel Height="300">
      <MultiComboBoxItem Content="Option 1" />
      <MultiComboBoxItem Content="Option 2" />
      <MultiComboBoxItem Content="Option 3" />
    </StackPanel>
  </Design.PreviewWith>

  <ControlTheme x:Key="{x:Type MultiComboBoxItem}" TargetType="MultiComboBoxItem">
    <Setter Property="Padding" Value="12 8" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="32" />
    <Setter Property="Background" Value="{DynamicResource ComboBoxItemBackground}" />
    <Setter Property="Template">
      <ControlTemplate TargetType="MultiComboBoxItem">
        <Border
          x:Name="RootBorder"
          Padding="{TemplateBinding Padding}"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          CornerRadius="{TemplateBinding CornerRadius}">
          <!-- <Grid x:Name="RootGrid" ColumnDefinitions="Auto, *"> -->
          <!-- <PathIcon -->
          <!--   Name="CheckGlyph" -->
          <!--   Grid.Column="0" -->
          <!--   Width="{DynamicResource CheckBoxBoxGlyphWidth}" -->
          <!--   Height="{DynamicResource CheckBoxBoxGlyphHeight}" -->
          <!--   Theme="{DynamicResource InnerPathIcon}" -->
          <!--   Margin="0 0 8 0" -->
          <!--   VerticalAlignment="Center" -->
          <!--   Data="{DynamicResource SemiIconTick}" -->
          <!--   Opacity="0" /> -->
          <CheckBox
            Content="{TemplateBinding Content}"
            IsChecked="{TemplateBinding IsSelected, Mode=TwoWay}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch" />
          <!-- <ContentPresenter -->
          <!--   x:Name="ContentPresenter" -->
          <!--   Grid.Column="1" -->
          <!--   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" -->
          <!--   VerticalAlignment="Center" -->
          <!--   Content="{TemplateBinding Content}" -->
          <!--   ContentTemplate="{TemplateBinding ContentTemplate}" -->
          <!--   IsVisible="{TemplateBinding Content, Converter={x:Static ObjectConverters.IsNotNull}}" -->
          <!--   RecognizesAccessKey="True" -->
          <!--   TextWrapping="Wrap" /> -->
          <!-- </Grid> -->
        </Border>
      </ControlTemplate>
    </Setter>
    <!-- <Style Selector="^:disabled"> -->
    <!--   <Setter Property="Foreground" Value="{DynamicResource ListBoxItemDisabledForeground}" /> -->
    <!--   <Setter Property="Background" Value="{DynamicResource ListBoxItemDisabledBackground}" /> -->
    <!--   <Style Selector="^:selected"> -->
    <!--     <Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedDisabledBackground}" /> -->
    <!--   </Style> -->
    <!-- </Style> -->

    <!-- ~1~  Pointerover State  @1@ -->
    <!-- <Style Selector="^:pointerover"> -->
    <!--   <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemPointeroverForeground}" /> -->
    <!--   <Setter Property="Background" Value="{DynamicResource ComboBoxItemPointeroverBackground}" /> -->
    <!-- </Style> -->
    <!-- -->
    <!-- ~1~  Pressed State  @1@ -->
    <!-- <Style Selector="^:pressed"> -->
    <!--   <Setter Property="Foreground" Value="{DynamicResource ComboBoxItemPressedForeground}" /> -->
    <!--   <Setter Property="Background" Value="{DynamicResource ComboBoxItemPressedBackground}" /> -->
    <!-- </Style> -->
    <!-- -->
    <!-- ~1~  Selected State  @1@ -->
    <!-- <Style Selector="^:selected /template/ PathIcon#CheckGlyph"> -->
    <!--   <Setter Property="Opacity" Value="1" /> -->
    <!-- </Style> -->
  </ControlTheme>
</ResourceDictionary>