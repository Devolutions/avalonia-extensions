<ResourceDictionary
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:converters="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls">

  <ResourceDictionary.MergedDictionaries>
    <ResourceInclude Source="/Accents/ThemeResources.axaml" />
  </ResourceDictionary.MergedDictionaries>

  <Design.PreviewWith>
    <ThemeVariantScope RequestedThemeVariant="Light">
      <StackPanel Spacing="20">
        <SplitButton Content="Splitted">
          <SplitButton.Flyout>
            <MenuFlyout>
              <MenuItem Header="A" />
              <MenuItem Header="B" />
              <MenuItem Header="C" />
            </MenuFlyout>
          </SplitButton.Flyout>
        </SplitButton>

        <SplitButton Content="SplitButton">
          <SplitButton.Flyout>
            <Flyout>Hello</Flyout>
          </SplitButton.Flyout>
        </SplitButton>
        <SplitButton CornerRadius="16" Content="Rounded">
          <SplitButton.Flyout>
            <Flyout>Hello</Flyout>
          </SplitButton.Flyout>
        </SplitButton>
        <SplitButton IsEnabled="False">Disabled</SplitButton>
      </StackPanel>
    </ThemeVariantScope>
  </Design.PreviewWith>

  <x:Double x:Key="SplitButtonPrimaryButtonSize">26</x:Double>
  <x:Double x:Key="SplitButtonSecondaryButtonSize">26</x:Double>
  <x:Double x:Key="SplitButtonSeparatorWidth">1</x:Double>
  <x:Double x:Key="SplitButtonMinHeight">26</x:Double>

  <converters:MarginMultiplierConverter x:Key="PrimaryButtonBorderMultiplier" Left="True" Top="True" Bottom="True" Indent="1" />
  <converters:MarginMultiplierConverter x:Key="SecondaryButtonBorderMultiplier" Right="True" Top="True" Bottom="True" Indent="1" />
  <converters:MarginMultiplierConverter x:Key="SeparatorBorderMultiplier" Top="True" Bottom="True" Indent="1" />
  <converters:CornerRadiusFilterConverter x:Key="TopCornerRadiusFilterConverter" Filter="TopLeft, TopRight" />
  <converters:CornerRadiusFilterConverter x:Key="RightCornerRadiusFilterConverter" Filter="TopRight, BottomRight" />
  <converters:CornerRadiusFilterConverter x:Key="BottomCornerRadiusFilterConverter" Filter="BottomLeft, BottomRight" />
  <converters:CornerRadiusFilterConverter x:Key="LeftCornerRadiusFilterConverter" Filter="TopLeft, BottomLeft" />

  <ControlTheme x:Key="FluentSplitButtonComponent" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" />

  <ControlTheme x:Key="{x:Type SplitButton}" TargetType="SplitButton">
    <Setter Property="Background" Value="{DynamicResource SplitButtonBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource SplitButtonForeground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource SplitButtonBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource SplitButtonBorderThemeThickness}" />
    <Setter Property="MinHeight" Value="{DynamicResource SplitButtonMinHeight}" />
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
    <Setter Property="Focusable" Value="True" />
    <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
          </Grid.ColumnDefinitions>

          <Button
            x:Name="PART_PrimaryButton"
            Grid.Column="0"
            Classes.accent="{Binding 
                    Classes, 
                     RelativeSource={RelativeSource TemplatedParent}, 
                     Converter={x:Static DevoConverters.HasClass},
                     ConverterParameter=accent
                  }"
            Theme="{StaticResource FluentSplitButtonComponent}"
            MinWidth="{DynamicResource SplitButtonPrimaryButtonSize}"
            Foreground="{TemplateBinding Foreground}"
            Background="{TemplateBinding Background}"
            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource PrimaryButtonBorderMultiplier}}"
            BorderBrush="{TemplateBinding BorderBrush}"
            Content="{TemplateBinding Content}"
            ContentTemplate="{TemplateBinding ContentTemplate}"
            Command="{TemplateBinding Command}"
            CommandParameter="{TemplateBinding CommandParameter}"
            CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
            Padding="{TemplateBinding Padding}"
            Focusable="False"
            KeyboardNavigation.IsTabStop="False" />

          <!-- <Border x:Name="SeparatorBorder" -->
          <!--         Grid.Column="1" -->
          <!--         Background="Transparent" -->
          <!--         Width="{DynamicResource SplitButtonSeparatorWidth}" -->
          <!--         BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource SeparatorBorderMultiplier}}" -->
          <!--         BorderBrush="{TemplateBinding BorderBrush}" /> -->

          <Button
            x:Name="PART_SecondaryButton"
            Grid.Column="1"
            Classes.accent="{Binding 
                     Classes, 
                     RelativeSource={RelativeSource TemplatedParent}, 
                     Converter={x:Static DevoConverters.HasClass},
                     ConverterParameter=accent
                  }"
            Theme="{StaticResource FluentSplitButtonComponent}"
            MinWidth="{DynamicResource SplitButtonSecondaryButtonSize}"
            BorderBrush="{TemplateBinding BorderBrush}"
            Foreground="{TemplateBinding Foreground}"
            Background="{TemplateBinding Background}"
            BorderThickness="{TemplateBinding BorderThickness, Converter={StaticResource SecondaryButtonBorderMultiplier}}"
            CornerRadius="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}"
            Padding="0"
            HorizontalContentAlignment="Center"
            VerticalContentAlignment="Center"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Focusable="False"
            KeyboardNavigation.IsTabStop="False">
            <PathIcon
              Name="DropDownGlyph"
              UseLayoutRounding="False"
              IsHitTestVisible="False"
              Width="9"
              HorizontalAlignment="Center"
              VerticalAlignment="Center"
              Foreground="{DynamicResource ForegroundColor}"
              Data="{StaticResource ChevronPath}" />
          </Button>
        </Grid>
      </ControlTemplate>
    </Setter>

    <Style Selector="^:flyout-open /template/ Button">
      <Setter Property="Tag" Value="flyout-open" />
    </Style>

    <Style Selector="^:checked /template/ Button">
      <Setter Property="Tag" Value="checked" />
    </Style>

    <Style Selector="^:checked:flyout-open /template/ Button">
      <Setter Property="Tag" Value="checked-flyout-open" />
    </Style>
  </ControlTheme>
</ResourceDictionary>