<!-- Based off https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/Expander.xaml -->

<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:design="clr-namespace:Devolutions.AvaloniaTheme.Linux.Design">

  <!-- 
    Un-comment to allow auto-completion;
    DO NOT INCLUDE WHEN PUBLISHING!
  -->
  <!-- <ResourceDictionary.MergedDictionaries> -->
  <!--   <ResourceInclude Source="/Accents/ThemeResources.axaml" /> -->
  <!-- </ResourceDictionary.MergedDictionaries> -->

  <Design.PreviewWith>
    <design:ThemePreviewer>
      <Border Padding="20">
        <StackPanel Orientation="Vertical" Spacing="4" Width="250" Height="600">
          <Expander Header="Expand Down (default)">
            <TextBlock>Expanded content</TextBlock>
          </Expander>
          <Expander Header="Expand Down (default)">
            <TextBlock>Expanded content</TextBlock>
          </Expander>
          <Expander>
            <Expander.Header>
              <Grid ColumnDefinitions="*, Auto">
                <TextBlock Grid.Column="0" Text="Text" />
                <TextBlock Grid.Column="1" Text="icon" />
              </Grid>
            </Expander.Header>
            <TextBlock>Expanded content</TextBlock>
          </Expander>
          <Expander Header="Disabled" IsEnabled="False">
            <TextBlock>Expanded content</TextBlock>
          </Expander>

          <Expander Header="Custom height" MinHeight="48" Margin="0 40 0 0 ">
            <TextBlock>Expanded content</TextBlock>
          </Expander>

          <TextBlock Margin="0 40 0 10">Various non-standard directions:</TextBlock>
          <Expander ExpandDirection="Up" Header="Expand Up">
            <StackPanel>
              <TextBlock>Expanded content</TextBlock>
            </StackPanel>
          </Expander>
          <Expander ExpandDirection="Left" Header="Expand Left">
            <StackPanel>
              <TextBlock>Expanded content</TextBlock>
            </StackPanel>
          </Expander>
          <Expander ExpandDirection="Right" Header="Expand Right">
            <StackPanel>
              <TextBlock>Expanded content</TextBlock>
            </StackPanel>
          </Expander>
          <Expander ExpandDirection="Up" Header="Rounded" CornerRadius="25">
            <StackPanel>
              <TextBlock>Expanded content</TextBlock>
            </StackPanel>
          </Expander>
        </StackPanel>
      </Border>
    </design:ThemePreviewer>
  </Design.PreviewWith>

  <!-- Shared header/content -->
  <x:Double x:Key="ExpanderMinHeight">39</x:Double>

  <!-- Header -->
  <Thickness x:Key="ExpanderHeaderPadding">16,0,0,0</Thickness>
  <Thickness x:Key="ExpanderHeaderBorderThickness">1</Thickness>
  <Thickness x:Key="ExpanderChevronBorderThickness">0</Thickness>
  <Thickness x:Key="ExpanderChevronMargin">23,0,19,0</Thickness>
  <x:Double x:Key="ExpanderChevronWidth">10</x:Double>

  <!-- Content -->
  <Thickness x:Key="ExpanderContentPadding">16</Thickness>
  <Thickness x:Key="ExpanderContentLeftBorderThickness">1,1,0,1</Thickness>
  <Thickness x:Key="ExpanderContentUpBorderThickness">1,1,1,0</Thickness>
  <Thickness x:Key="ExpanderContentRightBorderThickness">0,1,1,1</Thickness>
  <Thickness x:Key="ExpanderContentDownBorderThickness">1,0,1,1</Thickness>

  <ControlTheme x:Key="ExpanderToggleButtonTheme" TargetType="ToggleButton">
    <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ExpanderHeaderBorderThickness}" />
    <Setter Property="Foreground" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="Padding" Value="{DynamicResource ExpanderHeaderPadding}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Panel Name="RootPanel"
               ClipToBounds="False"
               Margin=" 1 0 1 2">
          <Border x:Name="ToggleButtonBackground"
                  CornerRadius="{TemplateBinding CornerRadius}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  BoxShadow="0 1 1 1 #16000000">
            <Grid x:Name="ToggleButtonGrid"
                  ColumnDefinitions="*,Auto">
              <ContentPresenter x:Name="PART_ContentPresenter"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="{TemplateBinding Padding}" />
              <Border Grid.Column="1"
                      Width="{DynamicResource ExpanderChevronWidth}"
                      Margin="{DynamicResource ExpanderChevronMargin}">
                <Path x:Name="ExpandCollapseChevron"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Stretch="Uniform"
                      RenderTransformOrigin="50%,50%"
                      Stroke="{DynamicResource ForegroundHighBrush}"
                      StrokeThickness="1">
                  <Path.RenderTransform>
                    <RotateTransform />
                  </Path.RenderTransform>
                </Path>
              </Border>
            </Grid>
          </Border>
          <Border Name="BottomBorder"
                  CornerRadius="{TemplateBinding CornerRadius}"
                  BorderThickness="0 0 0 1"
                  BorderBrush="{DynamicResource ExpanderHeaderBottomBorderBrush}" />
        </Panel>
      </ControlTemplate>
    </Setter>

    <Style Selector="^:focus-visible">
      <Style Selector="^ /template/ Border#ToggleButtonBackground">
        <Setter Property="BorderBrush" Value="{WindowActiveResourceToggler InputFocusedBorder, InputBorder}" />
        <Setter Property="BorderThickness" Value="{WindowActiveResourceToggler InputFocusedBorderThickness, InputBorderThickness}" />
      </Style>
    </Style>

    <Style Selector="^[Tag=expanded]">
      <Style Selector="^ /template/ Path#ExpandCollapseChevron">
        <Style.Animations>
          <Animation FillMode="Both" Duration="0:0:0.0625">
            <KeyFrame Cue="0%">
              <Setter Property="RotateTransform.Angle" Value="0" />
            </KeyFrame>
            <KeyFrame Cue="100%">
              <Setter Property="RotateTransform.Angle" Value="180" />
            </KeyFrame>
          </Animation>
        </Style.Animations>
      </Style>
      <Style Selector="^ /template/ Border#ToggleButtonBackground">
        <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackgroundPointerOverBrush}" />
        <Setter Property="BoxShadow" Value="0 0 1 1 #16000000" />
      </Style>
      <Style Selector="^ /template/ Panel#RootPanel">
        <Setter Property="Margin" Value="1 0" />
      </Style>
    </Style>

    <Style Selector="^[Tag=collapsed] /template/ Path#ExpandCollapseChevron">
      <Style.Animations>
        <Animation FillMode="Both" Duration="0:0:0.0625">
          <KeyFrame Cue="0%">
            <Setter Property="RotateTransform.Angle" Value="180" />
          </KeyFrame>
          <KeyFrame Cue="100%">
            <Setter Property="RotateTransform.Angle" Value="0" />
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>

    <!-- PointerOver -->
    <Style Selector="^:pointerover /template/ Border#ToggleButtonBackground">
      <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackgroundPointerOverBrush}" />
    </Style>

    <!-- Pressed -->
    <Style Selector="^:pressed /template/ Border#ToggleButtonBackground">
      <Setter Property="Background" Value="{DynamicResource ExpanderHeaderBackgroundPressedBrush}" />
    </Style>

    <!-- Disabled -->
    <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
      <Setter Property="Opacity" Value="0.5" />
    </Style>
    <Style Selector="^:disabled /template/ Path#ExpandCollapseChevron">
      <Setter Property="Opacity" Value="0.5" />
    </Style>

  </ControlTheme>

  <ControlTheme x:Key="ExpanderToggleButtonUpTheme" TargetType="ToggleButton" BasedOn="{StaticResource ExpanderToggleButtonTheme}">
    <Style Selector="^ /template/ Path#ExpandCollapseChevron">
      <Setter Property="Data" Value="M 0 7 L 7 0 L 14 7" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="ExpanderToggleButtonDownTheme" TargetType="ToggleButton" BasedOn="{StaticResource ExpanderToggleButtonTheme}">
    <Style Selector="^ /template/ Path#ExpandCollapseChevron">
      <Setter Property="Data" Value="M 0 0 L 7 7 L 14 0" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="ExpanderToggleButtonLeftTheme" TargetType="ToggleButton" BasedOn="{StaticResource ExpanderToggleButtonTheme}">
    <Style Selector="^ /template/ Path#ExpandCollapseChevron">
      <Setter Property="Data" Value="M 7 0 L 0 7 L 7 14" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="ExpanderToggleButtonRightTheme" TargetType="ToggleButton" BasedOn="{StaticResource ExpanderToggleButtonTheme}">
    <Style Selector="^ /template/ Path#ExpandCollapseChevron">
      <Setter Property="Data" Value="M 0 0 L 7 7 L 0 14" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type Expander}" TargetType="Expander">
    <Setter Property="MinWidth" Value="{DynamicResource FlyoutThemeMinWidth}" />
    <Setter Property="MinHeight" Value="{DynamicResource ExpanderMinHeight}" />
    <Setter Property="Background" Value="{DynamicResource ExpanderBodyBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ExpanderHeaderBorderBrush}" />
    <Setter Property="Margin" Value="0 0 0 2" />
    <Setter Property="Padding" Value="{DynamicResource ExpanderContentPadding}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="Template">
      <ControlTemplate>
        <DockPanel MinWidth="{TemplateBinding MinWidth}"
                   MaxWidth="{TemplateBinding MaxWidth}">
          <ToggleButton x:Name="ExpanderHeader"
                        MinHeight="{TemplateBinding MinHeight}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        IsEnabled="{TemplateBinding IsEnabled}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}" />
          <Border x:Name="ExpanderContent"
                  IsVisible="{TemplateBinding IsExpanded, Mode=TwoWay}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  MinHeight="{TemplateBinding MinHeight}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Margin="1 0"
                  Padding="{TemplateBinding Padding}">
            <ContentPresenter x:Name="PART_ContentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Foreground="{TemplateBinding Foreground}"
                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
          </Border>
        </DockPanel>
      </ControlTemplate>
    </Setter>

    <Style Selector="^ /template/ ToggleButton#ExpanderHeader:pressed">
      <Setter Property="RenderTransform" Value="{x:Null}" />
    </Style>

    <Style Selector="^:left /template/ ToggleButton#ExpanderHeader, ^:right /template/ ToggleButton#ExpanderHeader">
      <Setter Property="VerticalAlignment" Value="Stretch" />
    </Style>

    <Style Selector="^:expanded /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Tag" Value="expanded" />
    </Style>

    <Style Selector="^:not(:expanded) /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{Binding $parent[Expander].CornerRadius}" />
      <Setter Property="Tag" Value="collapsed" />
    </Style>
    <Style Selector="^:expanded:up /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:up /template/ Border#ExpanderContent">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:down /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource TopCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:down /template/ Border#ExpanderContent">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource BottomCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:left /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:left /template/ Border#ExpanderContent">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:right /template/ ToggleButton#ExpanderHeader">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource LeftCornerRadiusFilterConverter}}" />
    </Style>
    <Style Selector="^:expanded:right /template/ Border#ExpanderContent">
      <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={StaticResource RightCornerRadiusFilterConverter}}" />
    </Style>

    <Style Selector="^:left /template/ ToggleButton#ExpanderHeader">
      <Setter Property="DockPanel.Dock" Value="Right" />
    </Style>
    <Style Selector="^:up /template/ ToggleButton#ExpanderHeader">
      <Setter Property="DockPanel.Dock" Value="Bottom" />
    </Style>
    <Style Selector="^:right /template/ ToggleButton#ExpanderHeader">
      <Setter Property="DockPanel.Dock" Value="Left" />
    </Style>
    <Style Selector="^:down /template/ ToggleButton#ExpanderHeader">
      <Setter Property="DockPanel.Dock" Value="Top" />
    </Style>

    <Style Selector="^:left /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Theme" Value="{DynamicResource ExpanderToggleButtonLeftTheme}" />
    </Style>
    <Style Selector="^:up /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Theme" Value="{DynamicResource ExpanderToggleButtonUpTheme}" />
    </Style>
    <Style Selector="^:right /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Theme" Value="{DynamicResource ExpanderToggleButtonRightTheme}" />
    </Style>
    <Style Selector="^:down /template/ ToggleButton#ExpanderHeader">
      <Setter Property="Theme" Value="{DynamicResource ExpanderToggleButtonDownTheme}" />
    </Style>

    <Style Selector="^:left /template/ Border#ExpanderContent">
      <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentLeftBorderThickness}" />
    </Style>
    <Style Selector="^:up /template/ Border#ExpanderContent">
      <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentUpBorderThickness}" />
    </Style>
    <Style Selector="^:right /template/ Border#ExpanderContent">
      <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentRightBorderThickness}" />
    </Style>
    <Style Selector="^:down /template/ Border#ExpanderContent">
      <Setter Property="BorderThickness" Value="{DynamicResource ExpanderContentDownBorderThickness}" />
    </Style>
  </ControlTheme>
</ResourceDictionary>