<ResourceDictionary
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:u="https://irihi.tech/ursa"
  xmlns:design="clr-namespace:Devolutions.AvaloniaTheme.DevExpress.Design">

  <Design.PreviewWith>
    <design:ThemePreviewer>
      <StackPanel Height="400" Width="400" Margin="20" Spacing="15">
        <TextBlock>Basic TagInput:</TextBlock>
        <u:TagInput Watermark="Enter tags..." />

        <TextBlock>With Tags:</TextBlock>
        <u:TagInput x:Name="PrePopulated" Watermark="Add more tags..." />

        <TextBlock>Disabled:</TextBlock>
        <u:TagInput IsEnabled="False" Watermark="Disabled..." />

        <TextBlock>Wrapper type:</TextBlock>
        <TagInput Watermark="Using wrapper..." />
      </StackPanel>
    </design:ThemePreviewer>
  </Design.PreviewWith>

  <!-- DevExpress theme for Ursa TagInput control -->
  <ControlTheme x:Key="{x:Type u:TagInput}" TargetType="u:TagInput">
    <Setter Property="InputTheme" Value="{DynamicResource TagInputTextBoxTheme}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="MinHeight" Value="{DynamicResource TextBasedInputMinHeight}" />
    <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="1 1 1 0" />
    <Setter Property="Foreground" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="Padding" Value="8,4" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="ItemTemplate">
      <DataTemplate>
        <u:ClosableTag
          Content="{Binding}"
          Command="{Binding Close, RelativeSource={RelativeSource FindAncestor, AncestorType=u:TagInput}}" />
      </DataTemplate>
    </Setter>
    <Setter Property="Template">
      <ControlTemplate TargetType="u:TagInput">
        <DataValidationErrors>
          <Panel>
            <!-- Main border (top, left, right) -->
            <Border
              Name="PART_BorderElement"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="{TemplateBinding CornerRadius}"
              MinWidth="{TemplateBinding MinWidth}"
              MinHeight="{TemplateBinding MinHeight}" />

            <!-- Bottom border (separate for focus effect) -->
            <Border
              Name="BottomBorderElement"
              Background="Transparent"
              BorderBrush="{DynamicResource TextBoxBottomBorderBrush}"
              BorderThickness="0 0 0 1"
              CornerRadius="{TemplateBinding CornerRadius}"
              MinWidth="{TemplateBinding MinWidth}"
              MinHeight="{TemplateBinding MinHeight}" />

            <!-- Error border for validation -->
            <Border
              Name="ErrorBorder"
              BorderBrush="{StaticResource SystemControlErrorTextForegroundBrush}"
              BorderThickness="1"
              CornerRadius="{DynamicResource ControlCornerRadius}"
              IsVisible="False" />

            <!-- Content area -->
            <Border Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
              <Panel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                <!-- Watermark -->
                <TextBlock
                  Name="{x:Static u:TagInput.PART_Watermark}"
                  Text="{TemplateBinding Watermark}"
                  Foreground="{TemplateBinding Foreground}"
                  FontSize="{DynamicResource ControlFontSize}"
                  Opacity="0.5"
                  IsVisible="False"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Left" />

                <!-- Tags and input -->
                <ItemsControl
                  Name="PART_ItemsControl"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Top"
                  ItemTemplate="{TemplateBinding ItemTemplate}"
                  ItemsSource="{TemplateBinding Items}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <u:TagInputPanel VerticalAlignment="Top" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </ItemsControl>
              </Panel>
            </Border>
          </Panel>
        </DataValidationErrors>
      </ControlTemplate>
    </Setter>

    <!-- Empty state: show watermark -->
    <Style Selector="^:empty /template/ TextBlock#PART_Watermark">
      <Setter Property="IsVisible" Value="True" />
    </Style>

    <!-- Focus state: change bottom border -->
    <Style Selector="^:focus-within /template/ Border#BottomBorderElement">
      <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderSelectedBrush}" />
      <Setter Property="BorderThickness" Value="0 0 0 1.6" />
    </Style>

    <!-- Disabled state -->
    <Style Selector="^:disabled">
      <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabledBrush}" />

      <Style Selector="^ /template/ Border#PART_BorderElement">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderSelectedBrush}" />
        <Setter Property="BorderThickness" Value="1" />
      </Style>

      <Style Selector="^ /template/ Border#BottomBorderElement">
        <Setter Property="IsVisible" Value="False" />
      </Style>

      <Style Selector="^ /template/ TextBlock#PART_Watermark">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabledBrush}" />
      </Style>
    </Style>

    <!-- Error/validation state -->
    <Style Selector="^:error /template/ Border#ErrorBorder">
      <Setter Property="IsVisible" Value="True" />
    </Style>
  </ControlTheme>

  <!-- Theme for embedded TextBox -->
  <ControlTheme x:Key="TagInputTextBoxTheme" TargetType="TextBox">
    <Setter Property="Foreground" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="SelectionBrush" Value="{DynamicResource TextSelectionColorSolid}" />
    <Setter Property="SelectionForegroundBrush" Value="{DynamicResource TextBoxSelectionForeground}" />
    <Setter Property="CaretBrush" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="Cursor" Value="Ibeam" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="Template">
      <ControlTemplate TargetType="TextBox">
        <Border Padding="0,4">
          <ScrollViewer
            AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
            HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
            IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
            VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
            <TextPresenter
              Name="PART_TextPresenter"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              CaretBrush="{TemplateBinding CaretBrush}"
              CaretIndex="{TemplateBinding CaretIndex}"
              LineHeight="{TemplateBinding LineHeight}"
              PasswordChar="{TemplateBinding PasswordChar}"
              RevealPassword="{TemplateBinding RevealPassword}"
              SelectionBrush="{TemplateBinding SelectionBrush}"
              SelectionEnd="{TemplateBinding SelectionEnd}"
              SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
              SelectionStart="{TemplateBinding SelectionStart}"
              Text="{TemplateBinding Text, Mode=TwoWay}"
              TextAlignment="{TemplateBinding TextAlignment}"
              TextWrapping="{TemplateBinding TextWrapping}" />
          </ScrollViewer>
        </Border>
      </ControlTemplate>
    </Setter>
  </ControlTheme>

  <!-- Alias for wrapper type -->
  <StaticResource x:Key="{x:Type TagInput}" ResourceKey="{x:Type u:TagInput}" />

</ResourceDictionary>
