<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <Design.PreviewWith>
    <!-- <ThemeVariantScope RequestedThemeVariant="Dark"> -->
    <Border Background="#f0f0f0">
      <StackPanel Margin="20" Width="300" Spacing="10" HorizontalAlignment="Left">
        <TextBlock>Name:</TextBlock>
        <TextBox Watermark="Enter your name">Normal</TextBox>
        <TextBox Watermark="Enter your name">Administrator</TextBox>
        <TextBlock>Password:</TextBlock>
        <TextBox PasswordChar="*" Watermark="Enter your password" />
        <TextBlock>Notes:</TextBlock>
        <TextBox Height="100" AcceptsReturn="True" TextWrapping="Wrap" />
        <TextBox InnerLeftContent="http://" />
        <TextBox InnerRightContent=".com" />
        <TextBox
          InnerLeftContent="http://"
          InnerRightContent=".com">
          devolutions
        </TextBox>
        <TextBox Classes="clearButton">With 'Clear' button</TextBox>
        <TextBox Watermark="Enter your name" IsEnabled="False" />
        <TextBox Watermark="Enter your name" IsEnabled="False">Disabled Filled</TextBox>
        <TextBox PasswordChar="•" Classes="revealPasswordButton">Reveal Password</TextBox>
        <TextBox PasswordChar="•" Classes="revealPasswordButton" RevealPassword="True">Password Revealed</TextBox>
        <TextBlock>Custom Height:</TextBlock>
        <Grid ColumnDefinitions="*, Auto" HorizontalAlignment="Stretch">
          <TextBox Grid.Column="0" Watermark="Type here" Height="35" VerticalContentAlignment="Center" />
          <Button Grid.Column="1" Content="..." HorizontalContentAlignment="Center" Height="35" Width="35"
                  Margin="5 0 0 0 " />
        </Grid>
      </StackPanel>
    </Border>
    <!-- </ThemeVariantScope> -->
  </Design.PreviewWith>

  <Thickness x:Key="TextBoxTopHeaderMargin">0,0,0,4</Thickness>
  <StreamGeometry x:Key="TextBoxClearButtonData">M 11.416016,10 20,1.4160156 18.583984,0 10,8.5839846 1.4160156,0 0,1.4160156 8.5839844,10 0,18.583985 1.4160156,20 10,11.416015 18.583984,20 20,18.583985 Z</StreamGeometry>
  <StreamGeometry x:Key="PasswordBoxRevealButtonData">m10.051 7.0032c2.215 0 4.0105 1.7901 4.0105 3.9984s-1.7956 3.9984-4.0105 3.9984c-2.215 0-4.0105-1.7901-4.0105-3.9984s1.7956-3.9984 4.0105-3.9984zm0 1.4994c-1.3844 0-2.5066 1.1188-2.5066 2.499s1.1222 2.499 2.5066 2.499 2.5066-1.1188 2.5066-2.499-1.1222-2.499-2.5066-2.499zm0-5.0026c4.6257 0 8.6188 3.1487 9.7267 7.5613 0.10085 0.40165-0.14399 0.80877-0.54686 0.90931-0.40288 0.10054-0.81122-0.14355-0.91208-0.54521-0.94136-3.7492-4.3361-6.4261-8.2678-6.4261-3.9334 0-7.3292 2.6792-8.2689 6.4306-0.10063 0.40171-0.50884 0.64603-0.91177 0.54571s-0.648-0.5073-0.54737-0.90901c1.106-4.4152 5.1003-7.5667 9.728-7.5667z</StreamGeometry>
  <StreamGeometry x:Key="PasswordBoxHideButtonData">m0.21967 0.21965c-0.26627 0.26627-0.29047 0.68293-0.07262 0.97654l0.07262 0.08412 4.0346 4.0346c-1.922 1.3495-3.3585 3.365-3.9554 5.7495-0.10058 0.4018 0.14362 0.8091 0.54543 0.9097 0.40182 0.1005 0.80909-0.1436 0.90968-0.5455 0.52947-2.1151 1.8371-3.8891 3.5802-5.0341l1.8096 1.8098c-0.70751 0.7215-1.1438 1.71-1.1438 2.8003 0 2.2092 1.7909 4 4 4 1.0904 0 2.0788-0.4363 2.8004-1.1438l5.9193 5.9195c0.2929 0.2929 0.7677 0.2929 1.0606 0 0.2663-0.2662 0.2905-0.6829 0.0726-0.9765l-0.0726-0.0841-6.1135-6.1142 0.0012-0.0015-1.2001-1.1979-2.8699-2.8693 2e-3 -8e-4 -2.8812-2.8782 0.0012-0.0018-1.1333-1.1305-4.3064-4.3058c-0.29289-0.29289-0.76777-0.29289-1.0607 0zm7.9844 9.0458 3.5351 3.5351c-0.45 0.4358-1.0633 0.704-1.7392 0.704-1.3807 0-2.5-1.1193-2.5-2.5 0-0.6759 0.26824-1.2892 0.7041-1.7391zm1.7959-5.7655c-1.0003 0-1.9709 0.14807-2.8889 0.425l1.237 1.2362c0.5358-0.10587 1.0883-0.16119 1.6519-0.16119 3.9231 0 7.3099 2.6803 8.2471 6.4332 0.1004 0.4018 0.5075 0.6462 0.9094 0.5459 0.4019-0.1004 0.6463-0.5075 0.5459-0.9094-1.103-4.417-5.0869-7.5697-9.7024-7.5697zm0.1947 3.5093 3.8013 3.8007c-0.1018-2.0569-1.7488-3.7024-3.8013-3.8007z</StreamGeometry>

  <MenuFlyout x:Key="DefaultTextBoxContextFlyout">
    <MenuItem Header="{DynamicResource StringTextFlyoutCutText}" Command="{Binding $parent[TextBox].Cut}"
              IsEnabled="{Binding $parent[TextBox].CanCut}" InputGesture="{x:Static TextBox.CutGesture}" />
    <MenuItem Header="{DynamicResource StringTextFlyoutCopyText}" Command="{Binding $parent[TextBox].Copy}"
              IsEnabled="{Binding $parent[TextBox].CanCopy}" InputGesture="{x:Static TextBox.CopyGesture}" />
    <MenuItem Header="{DynamicResource StringTextFlyoutPasteText}" Command="{Binding $parent[TextBox].Paste}"
              IsEnabled="{Binding $parent[TextBox].CanPaste}" InputGesture="{x:Static TextBox.PasteGesture}" />
  </MenuFlyout>
  <MenuFlyout x:Key="HorizontalTextBoxContextFlyout"
              FlyoutPresenterTheme="{StaticResource HorizontalMenuFlyoutPresenter}"
              ItemContainerTheme="{StaticResource HorizontalMenuItem}">
    <MenuItem Header="{DynamicResource StringTextFlyoutCutText}" Command="{Binding $parent[TextBox].Cut}"
              IsEnabled="{Binding $parent[TextBox].CanCut}" IsVisible="{Binding $parent[TextBox].CanCut}" />
    <MenuItem Header="{DynamicResource StringTextFlyoutCopyText}" Command="{Binding $parent[TextBox].Copy}"
              IsEnabled="{Binding $parent[TextBox].CanCopy}" IsVisible="{Binding $parent[TextBox].CanCopy}" />
    <MenuItem Header="{DynamicResource StringTextFlyoutPasteText}" Command="{Binding $parent[TextBox].Paste}"
              IsEnabled="{Binding $parent[TextBox].CanPaste}" />
  </MenuFlyout>

  <ControlTheme x:Key="FluentTextBoxButton" TargetType="Button">
    <Setter Property="Background" Value="{DynamicResource TextControlButtonBackground}" />
    <Setter Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrush}" />
    <Setter Property="Focusable" Value="False" />
    <Setter Property="MinWidth" Value="34" />
    <Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
    <Setter Property="Width" Value="{Binding $self.Bounds.Height}" />
    <Setter Property="TextElement.Foreground" Value="{DynamicResource TextControlButtonForeground}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter Name="PART_ContentPresenter"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Content="{TemplateBinding Content}"
                            Padding="{TemplateBinding Padding}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style Selector="^:pointerover /template/ ContentPresenter">
      <Setter Property="Background" Value="{DynamicResource TextControlButtonBackgroundPointerOver}" />
      <Setter Property="BorderBrush" Value="{DynamicResource TextControlButtonBorderBrushPointerOver}" />
      <Setter Property="Foreground" Value="{DynamicResource TextControlButtonForegroundPointerOver}" />
    </Style>

    <Style Selector="^:disabled /template/ ContentPresenter">
      <Setter Property="Opacity" Value="0" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="FluentTextBoxToggleButton"
                TargetType="ToggleButton"
                BasedOn="{StaticResource FluentTextBoxButton}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <ContentPresenter Name="PART_ContentPresenter"
                            Background="{TemplateBinding Background}"
                            Content="{TemplateBinding Content}"
                            Padding="{TemplateBinding Padding}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type TextBox}" TargetType="TextBox">
    <Setter Property="Foreground" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
    <Setter Property="CaretBrush" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="SelectionBrush" Value="{DynamicResource TextSelectionColorSolid}" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="26" />
    <Setter Property="MinWidth" Value="26" />
    <Setter Property="Padding" Value="10 3" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
    <Setter Property="ContextFlyout"
            Value="{OnFormFactor Desktop={StaticResource DefaultTextBoxContextFlyout}, Mobile={StaticResource HorizontalTextBoxContextFlyout}}" />
    <Setter Property="FontSize">
      <Setter.Value>
        <MultiBinding Converter="{StaticResource RevealPasswordToFontSizeConverter}">
          <Binding RelativeSource="{RelativeSource Self}" Path="PasswordChar" />
          <Binding RelativeSource="{RelativeSource Self}" Path="RevealPassword" />
          <Binding Source="{StaticResource ControlFontSize}" />
          <Binding Source="{StaticResource PasswordHiddenFontSize}" />
        </MultiBinding>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <ControlTemplate>
        <DataValidationErrors>
          <Panel>
            <Border
              Name="PART_BorderElement"
              Background="{TemplateBinding Background}"
              BorderBrush="{DynamicResource TextBoxBorderBrush}"
              BorderThickness="1 1 1 0"
              CornerRadius="{TemplateBinding CornerRadius}"
              MinWidth="{TemplateBinding MinWidth}"
              MinHeight="{TemplateBinding MinHeight}" />
            <Border
              Name="BottomBorderElement"
              Background="Transparent"
              BorderBrush="{DynamicResource TextBoxBottomBorderBrush}"
              BorderThickness="0 0 0 1"
              CornerRadius="{TemplateBinding CornerRadius}"
              MinWidth="{TemplateBinding MinWidth}"
              MinHeight="{TemplateBinding MinHeight}" />
            <Border
              Margin="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}">
              <Grid ColumnDefinitions="Auto,*,Auto">
                <ContentPresenter Grid.Column="0"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding InnerLeftContent}" />
                <DockPanel Name="PART_InnerDockPanel"
                           Grid.Column="1">
                  <TextBlock Name="PART_FloatingWatermark"
                             Foreground="{DynamicResource SystemAccentColor}"
                             IsVisible="False"
                             Text="{TemplateBinding Watermark}"
                             DockPanel.Dock="Top" />
                  <ScrollViewer Name="PART_ScrollViewer"
                                HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
                                IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}">
                    <Panel>
                      <TextBlock Name="PART_Watermark"
                                 Opacity="0.5"
                                 FontSize="{DynamicResource ControlFontSize}"
                                 Text="{TemplateBinding Watermark}"
                                 TextAlignment="{TemplateBinding TextAlignment}"
                                 TextWrapping="{TemplateBinding TextWrapping}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <TextBlock.IsVisible>
                          <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding ElementName="PART_TextPresenter" Path="PreeditText"
                                     Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Text"
                                     Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                          </MultiBinding>
                        </TextBlock.IsVisible>
                      </TextBlock>
                      <TextPresenter Name="PART_TextPresenter"
                                     Text="{TemplateBinding Text, Mode=TwoWay}"
                                     CaretBlinkInterval="{TemplateBinding CaretBlinkInterval}"
                                     CaretIndex="{TemplateBinding CaretIndex}"
                                     SelectionStart="{TemplateBinding SelectionStart}"
                                     SelectionEnd="{TemplateBinding SelectionEnd}"
                                     TextAlignment="{TemplateBinding TextAlignment}"
                                     TextWrapping="{TemplateBinding TextWrapping}"
                                     LineHeight="{TemplateBinding LineHeight}"
                                     LetterSpacing="{TemplateBinding LetterSpacing}"
                                     RevealPassword="{TemplateBinding RevealPassword}"
                                     SelectionBrush="{TemplateBinding SelectionBrush}"
                                     SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                     CaretBrush="{TemplateBinding CaretBrush}"
                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <TextPresenter.PasswordChar>
                          <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="PasswordChar"
                                   Converter="{StaticResource CharToDevExpressPasswordCharConverter}" />
                        </TextPresenter.PasswordChar>
                      </TextPresenter>
                    </Panel>
                    <ScrollViewer.Styles>
                      <Style Selector="ScrollContentPresenter#PART_ContentPresenter">
                        <Setter Property="Cursor" Value="IBeam" />
                      </Style>
                    </ScrollViewer.Styles>
                  </ScrollViewer>
                </DockPanel>
                <ContentPresenter Grid.Column="2"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding InnerRightContent}" />
              </Grid>
            </Border>
          </Panel>
        </DataValidationErrors>
      </ControlTemplate>
    </Setter>

    <!-- Disabled State -->
    <Style Selector="^:disabled">
      <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabledBrush}" />

      <Style Selector="^ /template/ Border#PART_BorderElement">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxDisabledBorderSelectedBrush}" />
        <Setter Property="BorderThickness" Value="1" />
      </Style>
      <Style Selector="^ /template/ Border#BottomBorderElement">
        <Setter Property="IsVisible" Value="False" />
      </Style>

      <Style Selector="^ /template/ TextBlock#PART_Watermark, ^ /template/ TextBlock#PART_FloatingWatermark">
        <Setter Property="Foreground" Value="{DynamicResource TextControlPlaceholderForegroundDisabled}" />
      </Style>
    </Style>


    <!-- Focused State -->
    <Style Selector="^:focus">
      <Style Selector="^ /template/ Border#BottomBorderElement">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderSelectedBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 1.6" />
      </Style>
    </Style>

    <Style Selector="^:error /template/ Border#PART_BorderElement">
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}" />
    </Style>

    <Style Selector="^ /template/ TextBlock#PART_FloatingWatermark">
      <Setter Property="Cursor" Value="IBeam" />
    </Style>

    <Style Selector="^[UseFloatingWatermark=true]:not(:empty) /template/ TextBlock#PART_FloatingWatermark">
      <Setter Property="IsVisible" Value="True" />
    </Style>

    <Style Selector="^.revealPasswordButton[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
      <Setter Property="InnerRightContent">
        <Template>
          <ToggleButton Theme="{StaticResource FluentTextBoxToggleButton}"
                        IsChecked="{Binding $parent[TextBox].RevealPassword, Mode=TwoWay}"
                        ClipToBounds="True">
            <Panel>
              <PathIcon Data="{StaticResource PasswordBoxRevealButtonData}"
                        Height="8" Width="12"
                        IsVisible="{Binding !$parent[ToggleButton].IsChecked}" />
              <PathIcon Data="{StaticResource PasswordBoxHideButtonData}"
                        Height="12" Width="12"
                        IsVisible="{Binding $parent[ToggleButton].IsChecked}" />
            </Panel>
          </ToggleButton>
        </Template>
      </Setter>
    </Style>

    <Style Selector="^[AcceptsReturn=True] /template/ TextPresenter#PART_TextPresenter">
      <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style Selector="^.clearButton[AcceptsReturn=False][IsReadOnly=False]:focus:not(TextBox:empty)">
      <Setter Property="InnerRightContent">
        <Template>
          <Button Theme="{StaticResource FluentTextBoxButton}"
                  Command="{Binding $parent[TextBox].Clear}"
                  ClipToBounds="True">
            <PathIcon Data="{StaticResource TextBoxClearButtonData}" Height="10" Width="10" />
          </Button>
        </Template>
      </Setter>
    </Style>
  </ControlTheme>
</ResourceDictionary>