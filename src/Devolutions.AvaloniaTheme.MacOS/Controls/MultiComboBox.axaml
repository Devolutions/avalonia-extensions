<ResourceDictionary
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:u="https://irihi.tech/ursa"
  xmlns:design="clr-namespace:Devolutions.AvaloniaTheme.MacOS.Design">

  <Design.PreviewWith>
    <design:ThemePreviewer Padding="20" Height="300" Width="300">
      <StackPanel>
        <MultiComboBox Watermark="fill" Margin="10">
          <MultiComboBoxItem Content="Option 1" IsSelected="True" />
          <MultiComboBoxItem Content="Option 2" IsEnabled="False" />
          <MultiComboBoxItem Content="Option 3" IsEnabled="False" IsSelected="True" />
          <MultiComboBoxItem Content="Option 4" />
          <MultiComboBoxItem Content="Option 5" />
        </MultiComboBox>

        <MultiComboBox Watermark="fill" Margin="10">
          <MultiComboBoxItem Content="Option 1" />
          <MultiComboBoxItem Content="Option 2" />
          <MultiComboBoxItem Content="Option 3" />
          <MultiComboBoxItem Content="Option 4" />
        </MultiComboBox>

        <MultiComboBox Watermark="fill" Margin="10" IsEnabled="False">
          <MultiComboBoxItem Content="Option 1" />
        </MultiComboBox>

        <MultiComboBox Watermark="With Select All" Margin="10" SelectAllLabel="Select All">
          <MultiComboBoxItem Content="Option 1" />
          <MultiComboBoxItem Content="Option 2" />
          <MultiComboBoxItem Content="Option 3" />
          <MultiComboBoxItem Content="Option 4" />
        </MultiComboBox>
      </StackPanel>
    </design:ThemePreviewer>
  </Design.PreviewWith>

  <ControlTheme x:Key="{x:Type MultiComboBox}" TargetType="MultiComboBox">
    <Setter Property="Background" Value="{DynamicResource ControlBackgroundHighBrush}" />
    <Setter Property="Foreground" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="MaxDropDownHeight" Value="504" />
    <Setter Property="MaxSelectionBoxHeight" Value="20" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="FontSize" Value="{DynamicResource ControlFontSize}" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Padding" Value="8 1 6 2" />
    <Setter Property="MinHeight" Value="22" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="Template">
      <ControlTemplate>
        <Panel Name="ReservedSpaceForFocus" Margin="{StaticResource InputControlsSpaceForFocusBorder}">
          <Border
            Name="border"
            Background="{TemplateBinding Background}"
            BorderThickness="{DynamicResource ButtonBorderThickness}"
            BorderBrush="{DynamicResource ControlBorderRaisedBrush}"
            BoxShadow="{DynamicResource ControlBorderBoxShadow}"
            MinHeight="{TemplateBinding MinHeight}"
            CornerRadius="{TemplateBinding CornerRadius}">
            <Grid ColumnDefinitions="*,Auto">
              <TextBlock
                Name="PlaceholderTextBlock"
                Grid.Column="0"
                Opacity="0.5"
                MaxHeight="12"
                FontSize="{TemplateBinding FontSize}"
                Margin="{TemplateBinding Padding}"
                Text="{TemplateBinding Watermark}"
                IsVisible="False" />

              <ToggleButton
                Name="Toggle"
                Grid.Column="1"
                Theme="{StaticResource PopUpToggleButton}"
                Width="16"
                Height="16"
                Margin="2"
                Padding="3"
                IsHitTestVisible="False"
                Focusable="False" />

              <Border
                Name="{x:Static u:MultiComboBox.PART_BackgroundBorder}"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                DockPanel.Dock="Right"
                Background="Transparent"
                IsHitTestVisible="True"
                Margin="{DynamicResource DropdownButtonMargin}"
                Width="{DynamicResource DropdownButtonWidth}"
                Height="{DynamicResource DropdownButtonHeight}"
                CornerRadius="{DynamicResource ControlCornerRadius}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch" />

              <SmallScrollViewer
                Name="PART_SelectionScrollViewer"
                Grid.Column="0"
                MaxHeight="{TemplateBinding MaxSelectionBoxHeight}"
                Background="{x:Null}"
                Margin="1 0"
                HorizontalScrollBarVisibility="{TemplateBinding ScrollbarVisibility}"
                HorizontalWheelBehavior.Enable="True"
                VerticalScrollBarVisibility="Disabled">
                <u:MultiComboBoxSelectedItemList
                  VerticalAlignment="Center"
                  ItemTemplate="{TemplateBinding SelectedItemTemplate}"
                  ItemsSource="{TemplateBinding SelectedItems}"
                  RemoveCommand="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Remove}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <WrapPanel Orientation="Horizontal" Background="Transparent" />
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </u:MultiComboBoxSelectedItemList>
              </SmallScrollViewer>
            </Grid>
          </Border>

          <Border
            Name="FocusBorderElement"
            Margin="{StaticResource FocusBorderMargin}"
            BorderThickness="{StaticResource FocusBorderThickness}"
            CornerRadius="7" />

          <Popup
            Name="PART_Popup"
            MaxHeight="{TemplateBinding MaxDropDownHeight}"
            IsLightDismissEnabled="True"
            IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
            PlacementTarget="border"
            OverlayInputPassThroughElement="{Binding #border}"
            InheritsTransform="True"
            Placement="AnchorAndGravity"
            PlacementAnchor="Bottom"
            PlacementGravity="Bottom"
            HorizontalOffset="0">
            <Popup.MinWidth>
              <MultiBinding Converter="{x:Static DevoMultiConverters.TotalWidthConverter}">
                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Bounds.Width" />
                <Binding Source="{StaticResource PopupSideMarginWidth}" />
              </MultiBinding>
            </Popup.MinWidth>
            <Popup.VerticalOffset>
              <MultiBinding Converter="{x:Static DevoMultiConverters.SelectedIndexToPopupOffsetConverter}">
                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="SelectedIndex" />
                <Binding Source="{StaticResource ComboBoxItemHeight}" />
                <Binding Source="{StaticResource InitialFirstItemDistance}" />
                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="MaxDropDownHeight" />
                <Binding Source="{StaticResource PopupTrimHeight}" />
              </MultiBinding>
            </Popup.VerticalOffset>
            <Border Background="{DynamicResource PopupBackgroundBrush}"
                    BorderBrush="{DynamicResource MenuFlyoutPresenterBorderBrush}"
                    BorderThickness="{DynamicResource MenuFlyoutPresenterBorderThickness}"
                    CornerRadius="{DynamicResource LayoutCornerRadius}"
                    Margin="{DynamicResource PopupMargin}"
                    Padding="{DynamicResource PopupPadding}"
                    BoxShadow="{DynamicResource PopupShadow}">
              <DockPanel LastChildFill="True">
                <ContentPresenter Content="{TemplateBinding PopupInnerTopContent}" DockPanel.Dock="Top" />
                <ContentPresenter Content="{TemplateBinding PopupInnerBottomContent}" DockPanel.Dock="Bottom" />
                <ScrollViewer
                  Grid.IsSharedSizeScope="True"
                  Margin="4 0"
                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                  <StackPanel Orientation="Vertical" Margin="{DynamicResource ComboBoxDropdownContentMargin}">
                    <MultiComboBoxSelectAllItem
                      Name="PART_SelectAllItem"
                      IsVisible="{TemplateBinding SelectAllLabel, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                      Focusable="True"
                      IsTabStop="False"
                      Content="{TemplateBinding SelectAllLabel}" />

                    <Separator IsVisible="{TemplateBinding SelectAllLabel, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />

                    <ItemsPresenter
                      Name="PART_ItemsPresenter"
                      KeyboardNavigation.TabNavigation="None"
                      Margin="0"
                      HorizontalAlignment="Stretch"
                      ItemsPanel="{TemplateBinding ItemsPanel}" />
                  </StackPanel>
                </ScrollViewer>
              </DockPanel>
            </Border>
          </Popup>
        </Panel>
      </ControlTemplate>
    </Setter>

    <Style Selector="^:selection-empty /template/ TextBlock#PlaceholderTextBlock">
      <Setter Property="IsVisible" Value="True" />
    </Style>

    <!-- Tabbing focus -->
    <Style Selector="^:focus-visible">
      <Style Selector="^ /template/ Border#FocusBorderElement">
        <Setter Property="BorderBrush" Value="{DynamicResource FocusBorderBrush}" />
      </Style>
    </Style>

    <Style Selector="^:disabled">
      <Setter Property="Foreground" Value="{DynamicResource ForegroundLowBrush}" />
      <Setter Property="Background" Value="{DynamicResource ControlBackgroundDisabledHighBrush}" />
      <Style Selector="^ /template/ Border#border">
        <Setter Property="BoxShadow" Value="{DynamicResource ComboBoxDisabledBoxShadow}" />
      </Style>
      <Style Selector="^ /template/ Path">
        <Setter Property="Fill" Value="{DynamicResource ForegroundLowBrush}" />
      </Style>
    </Style>
  </ControlTheme>
</ResourceDictionary>