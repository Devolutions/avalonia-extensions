<!--
  Based off:
  https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Themes.Fluent/Controls/CalendarDatePicker.xaml
-->

<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:design="clr-namespace:Devolutions.AvaloniaTheme.Linux.Design"
                    xmlns:sys="clr-namespace:System;assembly=System.Runtime">

  <!-- 
    Un-comment to allow auto-completion;
    DO NOT INCLUDE WHEN PUBLISHING!
  -->
  <!-- <ResourceDictionary.MergedDictionaries> -->
  <!--   <ResourceInclude Source="/Accents/ThemeResources.axaml" /> -->
  <!-- </ResourceDictionary.MergedDictionaries> -->

  <Design.PreviewWith>
    <design:ThemePreviewer>
      <StackPanel Margin="20" Spacing="20" Width="230">
        <CalendarDatePicker />
        <CalendarDatePicker SelectedDate="{Binding Source={x:Static sys:DateTime.Today}}"
                            IsDropDownOpen="False" />
        <CalendarDatePicker SelectedDateFormat="Long" SelectedDate="{Binding Source={x:Static sys:DateTime.Today}}" />
        <CalendarDatePicker SelectedDate="{Binding Source={x:Static sys:DateTime.Today}}"
                            IsEnabled="False" />
        <TextBlock Text="HorizontalAlignment: Left" Classes="section-title" />
        <CalendarDatePicker HorizontalAlignment="Left" />
        <CalendarDatePicker HorizontalAlignment="Left" SelectedDate="{Binding Source={x:Static sys:DateTime.Today}}" />
        <CalendarDatePicker HorizontalAlignment="Left" SelectedDateFormat="Long" SelectedDate="{Binding Source={x:Static sys:DateTime.Today}}" />
        <CalendarDatePicker HorizontalAlignment="Left" VerticalAlignment="Top">
          <DataValidationErrors.Error>
            <sys:Exception>
              <x:Arguments>
                <x:String>Error</x:String>
              </x:Arguments>
            </sys:Exception>
          </DataValidationErrors.Error>
        </CalendarDatePicker>
      </StackPanel>
    </design:ThemePreviewer>
  </Design.PreviewWith>


  <!-- Custom Button allows us to pass DatePicker state through the TextBox to the Button-->
  <ControlTheme x:Key="CalendarButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Foreground" Value="{Binding $parent[TextBox].Foreground}" />
    <Setter Property="Tag" Value="{Binding $parent[TextBox].Tag}" />
    <Setter Property="Content">
      <Setter.Value>
        <MultiBinding Converter="{x:Static DevoMultiConverters.FirstNonEmptyStringMultiConverter}">
          <Binding Path="$parent[TextBox].Text" />
          <Binding Path="$parent[TextBox].Watermark" />
        </MultiBinding>
      </Setter.Value>
    </Setter>

    <Style Selector="^[Tag=flyout-open]">
      <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
      <Setter Property="BorderBrush" Value="{DynamicResource CalendarButtonOpenBorderBrush}" />
    </Style>
  </ControlTheme>

  <!-- Custom TextBox hides all but the 'InnerRightContent' to accommodate the big DatePicker button 
        which will display the TextBox text/watermark-->
  <ControlTheme x:Key="PseudoTextBox" TargetType="TextBox">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Panel>
            <TextBlock Name="PART_Watermark"
                       IsVisible="False"
                       Text="{TemplateBinding Watermark}" />
            <TextPresenter Name="PART_TextPresenter"
                           IsVisible="False"
                           Text="{TemplateBinding Text, Mode=TwoWay}" />
            <ContentPresenter VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                              Content="{TemplateBinding InnerRightContent}" />
            <Border Name="ErrorBorder"
                    IsVisible="False"
                    BorderBrush="{DynamicResource SystemControlErrorTextForegroundBrush}"
                    BorderThickness="1"
                    CornerRadius="{DynamicResource ControlCornerRadius}" />
          </Panel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <Style Selector="^[Tag=error] /template/ Border#ErrorBorder">
      <Setter Property="IsVisible" Value="True" />
    </Style>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type CalendarDatePicker}" TargetType="CalendarDatePicker">
    <Setter Property="IsTodayHighlighted" Value="True" />
    <Setter Property="MinWidth" Value="132" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="ClipToBounds" Value="False" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="Template">
      <ControlTemplate>
        <DataValidationErrors ClipToBounds="False">
          <Panel x:Name="LayoutRoot"
                 ClipToBounds="False"
                 HorizontalAlignment="Stretch">
            <!-- TODO: Panel is probably redundant ... but wait till all is working -->
            <Panel ClipToBounds="False">
              <Panel>
                <!-- The TextBox#PART_TextBox is required by CalendarDatePicker to hold the selected date. 
                    Since Yaru just displays a button, a custom button is placed as InnerRightContent inside 
                    the otherwise hidden TextBox, and 'inherits' any TextBox properties set based on DatePicker state. -->
                <TextBox Name="PART_TextBox"
                         Theme="{StaticResource PseudoTextBox}"
                         Focusable="False"
                         IsReadOnly="True"
                         Background="Transparent"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"
                         HorizontalContentAlignment="Center">
                  <TextBox.InnerRightContent>
                    <!-- PART_Button _must_ be Focusable="False" (or the calendar will close on month selection) -->
                    <Button Name="PART_Button"
                            Theme="{StaticResource CalendarButton}"
                            Focusable="False" />
                  </TextBox.InnerRightContent>
                </TextBox>
                <Border Name="ErrorBorderElement"
                        IsVisible="False"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource SystemControlErrorTextForegroundBrush}"
                        CornerRadius="{DynamicResource ControlCornerRadius}" />
                <Border Name="FocusBorderElement"
                        IsVisible="False"
                        BorderThickness="2"
                        BorderBrush="{DynamicResource InputFocusedBorder}"
                        CornerRadius="{DynamicResource ControlCornerRadius}" />
              </Panel>
              <Popup Name="PART_Popup"
                     PlacementTarget="{TemplateBinding}"
                     Placement="Bottom"
                     WindowManagerAddShadowHint="False"
                     IsLightDismissEnabled="True"
                     ClipToBounds="False">
                <Panel>
                  <Border
                    ClipToBounds="False"
                    BorderThickness="1 "
                    BorderBrush="{DynamicResource CalendarPopupBorderColor}"
                    Background="{DynamicResource LayoutBackgroundHighBrush}"
                    CornerRadius="8 "
                    Margin="2 12 2 5"
                    Padding="7"
                    BoxShadow="0 1 1 1 #33000000">
                    <Calendar
                      Name="PART_Calendar"
                      Margin="0"
                      BorderBrush="{DynamicResource InputBorder}"
                      BorderThickness="1 "
                      FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                      IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                      SelectedDate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedDate, Mode=TwoWay}"
                      DisplayDate="{TemplateBinding DisplayDate}"
                      DisplayDateStart="{TemplateBinding DisplayDateStart}"
                      DisplayDateEnd="{TemplateBinding DisplayDateEnd}" />
                  </Border>
                  <!-- TODO: Figure out how to detect popup placement (when it opens _above_ the control) -->
                  <Panel Name="SpeechBubblePointerUp"
                         Margin="0 2 0 0 ">
                    <Polygon Points="0,12 0,10 10,0 20,10 20,12"
                             Fill="{DynamicResource LayoutBackgroundHighBrush}"
                             HorizontalAlignment="Center" />
                    <Polyline Points="0,10 10,0 20,10"
                              Stroke="{DynamicResource CalendarPopupBorderColor}"
                              HorizontalAlignment="Center" />
                  </Panel>

                </Panel>
              </Popup>
            </Panel>
          </Panel>
        </DataValidationErrors>
      </ControlTemplate>
    </Setter>

    <!-- Tabbing focus -->
    <Style Selector="^:focus-visible /template/ Border#FocusBorderElement">
      <Setter Property="IsVisible" Value="True" />
    </Style>
    <Style Selector="^:focus /template/ Border#FocusBorderElement">
      <Setter Property="IsVisible" Value="True" />
    </Style>

    <Style Selector="^:flyout-open /template/ TextBox">
      <Setter Property="Tag" Value="flyout-open" />
    </Style>
    <Style Selector="^:flyout-open /template/ Border#FocusBorderElement">
      <Setter Property="IsVisible" Value="False" />
    </Style>

    <Style Selector="^ /template/ TextBox:empty">
      <Setter Property="Foreground" Value="{DynamicResource ForegroundLowBrush}" />
    </Style>

    <!-- Error State -->
    <Style Selector="^:error /template/ Border#ErrorBorderElement">
      <Setter Property="IsVisible" Value="True" />
    </Style>
  </ControlTheme>
</ResourceDictionary>