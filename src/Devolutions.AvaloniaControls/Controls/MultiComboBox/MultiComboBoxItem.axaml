<ResourceDictionary
  xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:u="https://irihi.tech/ursa">

  <Design.PreviewWith>
    <StackPanel Height="200">
      <MultiComboBoxItem Content="Option 1" />
      <MultiComboBoxItem Content="Option 2" IsEnabled="False" />
      <MultiComboBoxItem Content="Option 3" IsSelected="True" IsEnabled="False" />

      <Separator Margin="0 5" />

      <u:MultiComboBoxItem Content="Option 1" />
      <u:MultiComboBoxItem Content="Option 2" IsEnabled="False" />
      <u:MultiComboBoxItem Content="Option 3" IsSelected="True" IsEnabled="False" />
    </StackPanel>
  </Design.PreviewWith>

  <ControlTheme x:Key="{x:Type u:MultiComboBoxItem}" TargetType="u:MultiComboBoxItem">
    <Setter Property="IsTabStop" Value="True" />
    <Setter Property="Padding" Value="6 0 12 0" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="MinHeight" Value="32" />
    <Setter Property="FocusAdorner" Value="{x:Null}" />
    <Setter Property="Background" Value="{DynamicResource ComboBoxItemBackground}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border
          x:Name="RootBorder"
          Padding="{TemplateBinding Padding}"
          Background="{TemplateBinding Background}"
          BorderBrush="{TemplateBinding BorderBrush}"
          BorderThickness="{TemplateBinding BorderThickness}"
          CornerRadius="{TemplateBinding CornerRadius}">
          <Border.Transitions>
            <Transitions>
              <BrushTransition Property="Background" Duration="0:0:0.03" />
            </Transitions>
          </Border.Transitions>
          <CheckBox
            Content="{TemplateBinding Content}"
            IsChecked="{TemplateBinding IsSelected, Mode=TwoWay}"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            IsTabStop="False"
            Focusable="False" />
        </Border>
      </ControlTemplate>
    </Setter>
    <Style Selector="^:disabled">
      <Setter Property="Foreground" Value="{DynamicResource ListBoxItemDisabledForeground}" />
      <Setter Property="Background" Value="{DynamicResource ListBoxItemDisabledBackground}" />
      <Style Selector="^:selected">
        <Setter Property="Background" Value="{DynamicResource ListBoxItemSelectedDisabledBackground}" />
      </Style>
    </Style>

    <!--  PointerOver state  -->
    <Style Selector="^:pointerover /template/ Border#RootBorder">
      <Setter Property="Background" Value="{DynamicResource ComboBoxItemBackgroundPointerOver}" />
      <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxItemBorderBrushPointerOver}" />
    </Style>

    <!-- Focused state -->
    <Style Selector="^:focus, ^[IsFocused=True]">
      <Style Selector="^ /template/ Border#RootBorder">
        <Setter Property="Background" Value="{DynamicResource ComboBoxItemBackgroundPointerOver}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxItemBorderBrushPointerOver}" />
      </Style>
    </Style>
  </ControlTheme>
  <StaticResource x:Key="{x:Type MultiComboBoxItem}" ResourceKey="{x:Type u:MultiComboBoxItem}" />
</ResourceDictionary>