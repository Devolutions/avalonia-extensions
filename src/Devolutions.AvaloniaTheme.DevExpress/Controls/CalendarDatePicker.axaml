<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="using:System"
                    xmlns:design="clr-namespace:Devolutions.AvaloniaTheme.DevExpress.Design">
  <Design.PreviewWith>
    <design:ThemePreviewer>
      <StackPanel Margin="20" Spacing="20">
        <CalendarDatePicker />
        <CalendarDatePicker SelectedDate="{Binding Source={x:Static sys:DateTime.Today}}" />
        <ComboBox PlaceholderText="yyyy-MM-dd" />
        <CalendarDatePicker IsEnabled="False" />
      </StackPanel>
    </design:ThemePreviewer>
  </Design.PreviewWith>
  
  <x:Double x:Key="CalendarDatePickerCurrentDayFontSize">12</x:Double>
  <x:Double x:Key="CalendarDatePickerMinHeight">32</x:Double>

  <ControlTheme x:Key="DatePickerButton"
                TargetType="Button">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <ContentPresenter Name="PART_ContentPresenter"
                            Content="{TemplateBinding Content}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </ControlTheme>

  <ControlTheme x:Key="{x:Type CalendarDatePicker}" TargetType="CalendarDatePicker">
    <Setter Property="Watermark" Value="yyyy-MM-dd" />
    <Setter Property="IsTodayHighlighted" Value="True" />
    <Setter Property="FirstDayOfWeek" Value="Monday" />
    <Setter Property="Foreground" Value="{DynamicResource ForegroundHighBrush}" />
    <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}" />
    <Setter Property="BorderBrush" Value="{DynamicResource ComboBoxBorderBrush}" />
    <Setter Property="BorderThickness" Value="{DynamicResource ComboBoxBorderThemeThickness}" />
    <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
    <Setter Property="MinHeight" Value="{DynamicResource TextBasedInputMinHeight}" />
    <Setter Property="Padding" Value="4 0 0 0 " />
    <Setter Property="MinWidth" Value="100" />
    <Setter Property="VerticalAlignment" Value="Center" />
    <Setter Property="Template">
      <ControlTemplate>
        <DataValidationErrors>
          <Panel x:Name="LayoutRoot"
                 HorizontalAlignment="Stretch">
            <!-- Brittle Button placement! Placing the Button as TextBox.InnerRightContent breaks functionality,
                       But this placement breaks if ValidationError text is positioned _above_ the TextBox 
                       Also: centering the button via setting a top margin gives inconsistent results on different monitors -->
            <Panel>
              <TextBox Name="PART_TextBox"
                       Watermark="{TemplateBinding Watermark}"
                       UseFloatingWatermark="{TemplateBinding UseFloatingWatermark}"
                       Width="{TemplateBinding Width}"
                       Foreground="{TemplateBinding Foreground}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       CornerRadius="{TemplateBinding CornerRadius}"
                       Padding="{TemplateBinding Padding}" />
              <Panel Height="{DynamicResource TextBasedInputMinHeight}" VerticalAlignment="Top">
                <Button Name="PART_Button"
                        Theme="{StaticResource DatePickerButton}"
                        Focusable="False">
                  <Border Name="DropDownGlyphBackground"
                          DockPanel.Dock="Right"
                          Background="Transparent"
                          Margin="2 0"
                          Width="20"
                          Height="17"
                          CornerRadius="{DynamicResource ControlCornerRadius}"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center">
                    <PathIcon Name="DropDownGlyph"
                              UseLayoutRounding="False"
                              IsHitTestVisible="False"
                              Width="9"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Foreground="{TemplateBinding Foreground}"
                              Data="{StaticResource ChevronPath}" />
                  </Border>
                </Button>
              </Panel>
              <Popup Name="PART_Popup"
                     PlacementTarget="{TemplateBinding}"
                     IsLightDismissEnabled="True">
                <Calendar Name="PART_Calendar"
                          FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                          IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                          SelectedDate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedDate, Mode=TwoWay}"
                          DisplayDate="{TemplateBinding DisplayDate}"
                          DisplayDateStart="{TemplateBinding DisplayDateStart}"
                          DisplayDateEnd="{TemplateBinding DisplayDateEnd}" />
              </Popup>
            </Panel>
          </Panel>
        </DataValidationErrors>
      </ControlTemplate>
    </Setter>

    <!-- Pressed State -->
    <!-- <Style Selector="^:pressed /template/ Border#Background"> -->
    <!--   <Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackgroundPressed}" /> -->
    <!--   <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrushPressed}" /> -->
    <!-- </Style> -->

    <!-- Pointer-over State -->
    <!-- <Style Selector="^:pointerover /template/ Border#Background"> -->
    <!--   <Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackgroundPointerOver}" /> -->
    <!--   <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrushPointerOver}" /> -->
    <!-- </Style> -->

    <!-- Disabled State -->
    <Style Selector="^:disabled">
      <Style Selector="^ /template/ Border#Background">
        <Setter Property="Background" Value="{DynamicResource CalendarDatePickerBackgroundDisabled}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CalendarDatePickerBorderBrushDisabled}" />
      </Style>

      <Style Selector="^ /template/ Button#PART_Button">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource CalendarDatePickerCalendarGlyphForegroundDisabled}" />
      </Style>
    </Style>

    <Style Selector="^ /template/ Border#DropDownGlyphBackground:pointerover">
      <Setter Property="Background" Value="{DynamicResource ControlBackgroundSelectedBrush}" />
    </Style>

    <Style Selector="^:flyout-open">
      <Style Selector="^ /template/ Border#BottomBorderElement">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderSelectedBrush}" />
        <Setter Property="BorderThickness" Value="0 0 0 1.6" />
      </Style>
      <Style Selector="^ /template/ Border#DropDownGlyphBackground">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundSelectedBrush}" />
      </Style>
      <Style Selector="^ /template/ PathIcon#DropDownGlyph">
        <Setter Property="Foreground" Value="#939393" />
      </Style>
    </Style>

    <!-- Focused State -->
    <Style Selector="^:focus-within:not(CalendarDatePicker:focus) /template/ Border#Background">
      <Setter Property="Background" Value="{DynamicResource TextControlBackgroundFocused}" />
      <Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}" />
      <Setter Property="BorderThickness" Value="{DynamicResource TextControlBorderThemeThicknessFocused}" />
    </Style>

    <!-- Error State -->
    <Style Selector="^:error /template/ Border#Background">
      <Setter Property="BorderBrush" Value="{DynamicResource SystemControlErrorTextForegroundBrush}" />
    </Style>
  </ControlTheme>
</ResourceDictionary>