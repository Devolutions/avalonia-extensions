<Styles x:Class="Devolutions.AvaloniaTheme.DevExpress.DevolutionsDevExpressThemeGlobalStyles"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--
    All styles defined here will "bleed-out" of our isolated ControlTheme!
    These should be limited as much as possible.
    
    We only have this here to support some scenarios where it might be conveninent to
    provide some default styling to children of some elements.
    For example, when a MenuItem.Icon contain a Svg and that menu item is disabled, we want to
    colorize that Svg in grey. 
    
    These styles are opt-out; consumers can use `<DevolutionsMacOsTheme GlobalStyles="False" />`
    to opt-out of these global styles.
    
    They are also provided as a separate tag to cover scenarios where consumers would like to scope
    them to some control instead of including them globally;
    They are thus available through the (very verbose) `<DevolutionsMacOsThemeGlobalStyles />` tag.

    This is to ensure consumers are granted enough control to prevent styles "bleeding-out" in cases
    where that might be undesirable.
    
    - sbergerondrouin 2025-06-09
  -->

  <Style Selector="Label.search-highlight > AccessText, Label.secondary-search-highlight > AccessText">
    <Setter Property="HorizontalAlignment" Value="Left" />
  </Style>

  <!-- Search highlight -->
  <Style Selector="Button.search-highlight > TextBlock, Label.search-highlight > AccessText, CheckBox.search-highlight > AccessText, RadioButton.search-highlight > AccessText">
    <Setter Property="Background" Value="{DynamicResource SearchHighlightBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource SearchHighlightForeground}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>
  <Style
    Selector="Button.secondary-search-highlight > TextBlock, Label.secondary-search-highlight > AccessText, CheckBox.secondary-search-highlight > AccessText, RadioButton.secondary-search-highlight > AccessText">
    <Setter Property="Background" Value="{DynamicResource SecondarySearchHighlightBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource SecondarySearchHighlightForeground}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>

  <Style Selector="SearchHighlightTextBlock">
    <Setter Property="HighlightBackground" Value="{DynamicResource SearchHighlightBackground}" />
    <Setter Property="HighlightForeground" Value="{DynamicResource SearchHighlightForeground}" />
  </Style>

  <Style Selector="EditableComboBox.search-highlight /template/ :is(ComboBox) /template/ Border#DropDownGlyphBackground:pointerover">
    <Setter Property="Background">
      <SolidColorBrush Color="{DynamicResource SearchHighlightForeground}" Opacity="0.2" />
    </Setter>
  </Style>
  <Style Selector="EditableComboBox.secondary-search-highlight /template/ :is(ComboBox) /template/ Border#DropDownGlyphBackground:pointerover">
    <Setter Property="Background">
      <SolidColorBrush Color="{DynamicResource SecondarySearchHighlightForeground}" Opacity="0.2" />
    </Setter>
  </Style>
  <Style Selector="EditableComboBox.search-highlight /template/ :is(ComboBox):dropdownopen /template/ Border#DropDownGlyphBackground">
    <Setter Property="Background">
      <SolidColorBrush Color="{DynamicResource SearchHighlightForeground}" Opacity="0.1" />
    </Setter>
  </Style>
  <Style Selector="EditableComboBox.secondary-search-highlight /template/ :is(ComboBox):dropdownopen /template/ Border#DropDownGlyphBackground">
    <Setter Property="Background">
      <SolidColorBrush Color="{DynamicResource SecondarySearchHighlightForeground}" Opacity="0.1" />
    </Setter>
  </Style>

  <Style Selector="EditableComboBoxItem.search-highlight /template/ SearchHighlightTextBlock /template/ TextBlock">
    <Setter Property="Background" Value="{DynamicResource SearchHighlightBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource SearchHighlightForeground}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>
  <Style Selector="EditableComboBoxItem.secondary-search-highlight /template/ SearchHighlightTextBlock /template/ TextBlock">
    <Setter Property="Background" Value="{DynamicResource SecondarySearchHighlightBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource SecondarySearchHighlightForeground}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>
</Styles>